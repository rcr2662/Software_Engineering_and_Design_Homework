**********************
Windows PowerShell transcript start
Start time: 20220902130938
Username: ROBERTOPC\reyes
RunAs User: ROBERTOPC\reyes
Configuration Name: 
Machine: ROBERTOPC (Microsoft Windows NT 10.0.22000.0)
Host Application: C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe
Process ID: 5356
PSVersion: 5.1.22000.832
PSEdition: Desktop
PSCompatibleVersions: 1.0, 2.0, 3.0, 4.0, 5.0, 5.1.22000.832
BuildVersion: 10.0.22000.832
CLRVersion: 4.0.30319.42000
WSManStackVersion: 3.0
PSRemotingProtocolVersion: 2.3
SerializationVersion: 1.1.0.1
**********************
Transcript started, output file is C:\git-1.txt
PS C:\WINDOWS\system32\git-katas> whoami
robertopc\reyes
PS C:\WINDOWS\system32\git-katas> cd basic-commits
PS C:\WINDOWS\system32\git-katas\basic-commits> cat README.md
# Git Kata: Basic Commits
This kata will introduce you to the `git add` and `git commit` commands.

This is a very introductory kata. if you have used `git status`, `git log --oneline --graph`, `git add` and `git commit` extensively you should probably skip it.

You can look at the bottom of this file, if you have not yet done basic git configuration.

## Setup:

1. Run `source setup.sh` (or `.\setup.ps1` in PowerShell)

## The task

1. Use `git status` to see which branch you are on.
2. What does `git log` look like?
3. Create a file
4. What does the output from `git status` look like now?
5. `add` the file to the staging area
6. How does `git status` look now?
7. `commit` the file to the repository
8. How does `git status` look now?
9. Change the content of the file you created earlier
10. What does `git status` look like now?
11. `add` the file change
12. What does `git status` look like now?
13. Change the file again
14. Make a `commit`
15. What does the `status` look like now? The `log`?
16. Add and commit the newest change

## Useful commands
- `git add`
- `git commit`
- `git commit -m "My commit message"`
- `git log`
- `git log -n 5`
- `git log --oneline`
- `git log --oneline --graph`
- `touch filename` to create a file (or `sc filename ''` in PowerShell)
- `echo content > file` to overwrite file with content (or `sc filename 'content'` in PowerShell)
- `echo content >> file` to append file with content (or `ac filename 'content'` in PowerShell)


## Git Initial Configuration
1. `git config --global user.name "John Doe"`
1. `git config --global user.email "johndoe@example.com`

For the vim scared:
- `git config --global core.editor nano`

For the windows peeps:
- `git config --global core.editor notepad`

Other editor options:
- `git config --global core.editor "atom --wait"`
- `git config --global core.editor "code --wait"`
- `git config --global core.editor "'C:/Program Files/Notepad++/notepad++.exe' -multiInst"`
PS C:\WINDOWS\system32\git-katas\basic-commits> .\setup.ps1
Initialized empty Git repository in C:/Windows/System32/git-katas/basic-commits/exercise/.git/


PS C:\WINDOWS\system32\git-katas\basic-commits\exercise> git status
On branch master

No commits yet

nothing to commit (create/copy files and use "git add" to track)
PS C:\WINDOWS\system32\git-katas\basic-commits\exercise> git log
fatal: your current branch 'master' does not have any commits yet
PS C:\WINDOWS\system32\git-katas\basic-commits\exercise> echo [<There is a message saying "fatal" the current master branch does not have any commits>]
[<There
is
a
message
saying
fatal
the
current
master
branch
does
not
have
any
commits>]
PS C:\WINDOWS\system32\git-katas\basic-commits\exercise> sc basic_commits.txt ''
PS C:\WINDOWS\system32\git-katas\basic-commits\exercise> git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        basic_commits.txt

nothing added to commit but untracked files present (use "git add" to track)
PS C:\WINDOWS\system32\git-katas\basic-commits\exercise> echo [<The file I created is red and is listed as an untracked file>]
[<The
file
I
created
is
red
and
is
listed
as
an
untracked
file>]
PS C:\WINDOWS\system32\git-katas\basic-commits\exercise> git add basic_commits.txt

PS C:\WINDOWS\system32\git-katas\basic-commits\exercise> git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   basic_commits.txt
PS C:\WINDOWS\system32\git-katas\basic-commits\exercise> echo [<The file is green and listed as a change to be commited>]
[<The
file
is
green
and
listed
as
a
change
to
be
commited>]
PS C:\WINDOWS\system32\git-katas\basic-commits\exercise> git commit -m "first commit" basic_commits.txt
[master (root-commit) 72b23a8] first commit
 1 file changed, 1 insertion(+)
 create mode 100644 basic_commits.txt
PS C:\WINDOWS\system32\git-katas\basic-commits\exercise> git status
On branch master
nothing to commit, working tree clean
PS C:\WINDOWS\system32\git-katas\basic-commits\exercise> echo [<There is a message saying that there is nothing to commit on the master branch>]
[<There
is
a
message
saying
that
there
is
nothing
to
commit
on
the
master
branch>]
PS C:\WINDOWS\system32\git-katas\basic-commits\exercise> sc basic_commits.txt 'first change'
PS C:\WINDOWS\system32\git-katas\basic-commits\exercise> git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   basic_commits.txt

no changes added to commit (use "git add" and/or "git commit -a")
PS C:\WINDOWS\system32\git-katas\basic-commits\exercise> echo [<The file is red and listed as a change that is not staged for commit>]
[<The
file
is
red
and
listed
as
a
change
that
is
not
staged
for
commit>]
PS C:\WINDOWS\system32\git-katas\basic-commits\exercise> git add basic_commits.txt

PS C:\WINDOWS\system32\git-katas\basic-commits\exercise> git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   basic_commits.txt
PS C:\WINDOWS\system32\git-katas\basic-commits\exercise> echo [<The file is green and listed as a change to be committed>]
[<The
file
is
green
and
listed
as
a
change
to
be
committed>]
PS C:\WINDOWS\system32\git-katas\basic-commits\exercise> ac basic_commits.txt 'second change'
PS C:\WINDOWS\system32\git-katas\basic-commits\exercise> git commit -m "Second commit"
[master c234f5a] Second commit
 1 file changed, 1 insertion(+), 1 deletion(-)
PS C:\WINDOWS\system32\git-katas\basic-commits\exercise> git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   basic_commits.txt

no changes added to commit (use "git add" and/or "git commit -a")
PS C:\WINDOWS\system32\git-katas\basic-commits\exercise> git log
commit c234f5a399aba4d5b5b47f18c3c615f167f38e41 (HEAD -> master)
Author: git-katas trainer bot <git-katas@example.com>
Date:   Fri Sep 2 15:15:47 2022 -0500

    Second commit

commit 72b23a8a22a27332ac0ea63a0e255c8014c58772
Author: git-katas trainer bot <git-katas@example.com>
Date:   Fri Sep 2 15:10:31 2022 -0500

    first commit
PS C:\WINDOWS\system32\git-katas\basic-commits\exercise> echo [<Status: The file is once again red and listed as a change not staged for commit. Log: My commits are listed with most recent at the top with the date and time they were made.>]
[<Status:
The
file
is
once
again
red
and
listed
as
a
change
not
staged
for
commit.
Log:
My
commits
are
listed
with
most
recent
at
the
top
with
the
date
and
time
they
were
made.>]
PS C:\WINDOWS\system32\git-katas\basic-commits\exercise> git add basic_commits.txt

PS C:\WINDOWS\system32\git-katas\basic-commits\exercise> git commit -m "third commit"
[master 2f13840] third commit
 1 file changed, 1 insertion(+)
PS C:\WINDOWS\system32\git-katas\basic-commits\exercise> Stop-Transcript
**********************
Windows PowerShell transcript end
End time: 20220902152035
**********************
